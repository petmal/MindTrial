/*
xAI's REST API

REST API for xAI compatible with other providers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xai

import (
	"encoding/json"
	"fmt"
)

// checks if the ListEmbeddingModelsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListEmbeddingModelsResponse{}

// ListEmbeddingModelsResponse struct for ListEmbeddingModelsResponse
type ListEmbeddingModelsResponse struct {
	// Array of available embedding models.
	Models               []EmbeddingModel `json:"models"`
	AdditionalProperties map[string]interface{}
}

type _ListEmbeddingModelsResponse ListEmbeddingModelsResponse

// NewListEmbeddingModelsResponse instantiates a new ListEmbeddingModelsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListEmbeddingModelsResponse(models []EmbeddingModel) *ListEmbeddingModelsResponse {
	this := ListEmbeddingModelsResponse{}
	this.Models = models
	return &this
}

// NewListEmbeddingModelsResponseWithDefaults instantiates a new ListEmbeddingModelsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListEmbeddingModelsResponseWithDefaults() *ListEmbeddingModelsResponse {
	this := ListEmbeddingModelsResponse{}
	return &this
}

// GetModels returns the Models field value
func (o *ListEmbeddingModelsResponse) GetModels() []EmbeddingModel {
	if o == nil {
		var ret []EmbeddingModel
		return ret
	}

	return o.Models
}

// GetModelsOk returns a tuple with the Models field value
// and a boolean to check if the value has been set.
func (o *ListEmbeddingModelsResponse) GetModelsOk() ([]EmbeddingModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Models, true
}

// SetModels sets field value
func (o *ListEmbeddingModelsResponse) SetModels(v []EmbeddingModel) {
	o.Models = v
}

func (o ListEmbeddingModelsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListEmbeddingModelsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["models"] = o.Models

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListEmbeddingModelsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"models",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListEmbeddingModelsResponse := _ListEmbeddingModelsResponse{}

	err = json.Unmarshal(data, &varListEmbeddingModelsResponse)

	if err != nil {
		return err
	}

	*o = ListEmbeddingModelsResponse(varListEmbeddingModelsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "models")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListEmbeddingModelsResponse struct {
	value *ListEmbeddingModelsResponse
	isSet bool
}

func (v NullableListEmbeddingModelsResponse) Get() *ListEmbeddingModelsResponse {
	return v.value
}

func (v *NullableListEmbeddingModelsResponse) Set(val *ListEmbeddingModelsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListEmbeddingModelsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListEmbeddingModelsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListEmbeddingModelsResponse(val *ListEmbeddingModelsResponse) *NullableListEmbeddingModelsResponse {
	return &NullableListEmbeddingModelsResponse{value: val, isSet: true}
}

func (v NullableListEmbeddingModelsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListEmbeddingModelsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
