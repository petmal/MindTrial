/*
xAI's REST API

REST API for xAI compatible with other providers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xai

import (
	"encoding/json"
	"fmt"
)

// checks if the ListLanguageModelsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLanguageModelsResponse{}

// ListLanguageModelsResponse struct for ListLanguageModelsResponse
type ListLanguageModelsResponse struct {
	// Array of available language models.
	Models               []LanguageModel `json:"models"`
	AdditionalProperties map[string]interface{}
}

type _ListLanguageModelsResponse ListLanguageModelsResponse

// NewListLanguageModelsResponse instantiates a new ListLanguageModelsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLanguageModelsResponse(models []LanguageModel) *ListLanguageModelsResponse {
	this := ListLanguageModelsResponse{}
	this.Models = models
	return &this
}

// NewListLanguageModelsResponseWithDefaults instantiates a new ListLanguageModelsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLanguageModelsResponseWithDefaults() *ListLanguageModelsResponse {
	this := ListLanguageModelsResponse{}
	return &this
}

// GetModels returns the Models field value
func (o *ListLanguageModelsResponse) GetModels() []LanguageModel {
	if o == nil {
		var ret []LanguageModel
		return ret
	}

	return o.Models
}

// GetModelsOk returns a tuple with the Models field value
// and a boolean to check if the value has been set.
func (o *ListLanguageModelsResponse) GetModelsOk() ([]LanguageModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Models, true
}

// SetModels sets field value
func (o *ListLanguageModelsResponse) SetModels(v []LanguageModel) {
	o.Models = v
}

func (o ListLanguageModelsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLanguageModelsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["models"] = o.Models

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListLanguageModelsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"models",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListLanguageModelsResponse := _ListLanguageModelsResponse{}

	err = json.Unmarshal(data, &varListLanguageModelsResponse)

	if err != nil {
		return err
	}

	*o = ListLanguageModelsResponse(varListLanguageModelsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "models")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListLanguageModelsResponse struct {
	value *ListLanguageModelsResponse
	isSet bool
}

func (v NullableListLanguageModelsResponse) Get() *ListLanguageModelsResponse {
	return v.value
}

func (v *NullableListLanguageModelsResponse) Set(val *ListLanguageModelsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListLanguageModelsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListLanguageModelsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLanguageModelsResponse(val *ListLanguageModelsResponse) *NullableListLanguageModelsResponse {
	return &NullableListLanguageModelsResponse{value: val, isSet: true}
}

func (v NullableListLanguageModelsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLanguageModelsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
