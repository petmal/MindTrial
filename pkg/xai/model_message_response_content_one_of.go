/*
xAI's REST API

REST API for xAI compatible with other providers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xai

import (
	"encoding/json"
	"fmt"
)

// checks if the MessageResponseContentOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageResponseContentOneOf{}

// MessageResponseContentOneOf Text response from the model.
type MessageResponseContentOneOf struct {
	Text                 string `json:"text"`
	Type                 string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _MessageResponseContentOneOf MessageResponseContentOneOf

// NewMessageResponseContentOneOf instantiates a new MessageResponseContentOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageResponseContentOneOf(text string, type_ string) *MessageResponseContentOneOf {
	this := MessageResponseContentOneOf{}
	this.Text = text
	this.Type = type_
	return &this
}

// NewMessageResponseContentOneOfWithDefaults instantiates a new MessageResponseContentOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageResponseContentOneOfWithDefaults() *MessageResponseContentOneOf {
	this := MessageResponseContentOneOf{}
	return &this
}

// GetText returns the Text field value
func (o *MessageResponseContentOneOf) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *MessageResponseContentOneOf) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *MessageResponseContentOneOf) SetText(v string) {
	o.Text = v
}

// GetType returns the Type field value
func (o *MessageResponseContentOneOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MessageResponseContentOneOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MessageResponseContentOneOf) SetType(v string) {
	o.Type = v
}

func (o MessageResponseContentOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageResponseContentOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MessageResponseContentOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"text",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageResponseContentOneOf := _MessageResponseContentOneOf{}

	err = json.Unmarshal(data, &varMessageResponseContentOneOf)

	if err != nil {
		return err
	}

	*o = MessageResponseContentOneOf(varMessageResponseContentOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "text")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMessageResponseContentOneOf struct {
	value *MessageResponseContentOneOf
	isSet bool
}

func (v NullableMessageResponseContentOneOf) Get() *MessageResponseContentOneOf {
	return v.value
}

func (v *NullableMessageResponseContentOneOf) Set(val *MessageResponseContentOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageResponseContentOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageResponseContentOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageResponseContentOneOf(val *MessageResponseContentOneOf) *NullableMessageResponseContentOneOf {
	return &NullableMessageResponseContentOneOf{value: val, isSet: true}
}

func (v NullableMessageResponseContentOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageResponseContentOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
