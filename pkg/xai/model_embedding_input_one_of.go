/*
xAI's REST API

REST API for xAI compatible with other providers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xai

import (
	"encoding/json"
	"fmt"
)

// checks if the EmbeddingInputOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddingInputOneOf{}

// EmbeddingInputOneOf A strings to be embedded. For best performance, prepend \"query: \" in front of query content and prepend \"passage: \" in front of passage/text
type EmbeddingInputOneOf struct {
	// A strings to be embedded. For best performance, prepend \"query: \" in front of query content and prepend \"passage: \" in front of passage/text
	String               string `json:"String"`
	AdditionalProperties map[string]interface{}
}

type _EmbeddingInputOneOf EmbeddingInputOneOf

// NewEmbeddingInputOneOf instantiates a new EmbeddingInputOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddingInputOneOf(string_ string) *EmbeddingInputOneOf {
	this := EmbeddingInputOneOf{}
	this.String = string_
	return &this
}

// NewEmbeddingInputOneOfWithDefaults instantiates a new EmbeddingInputOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddingInputOneOfWithDefaults() *EmbeddingInputOneOf {
	this := EmbeddingInputOneOf{}
	return &this
}

// GetString returns the String field value
func (o *EmbeddingInputOneOf) GetString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.String
}

// GetStringOk returns a tuple with the String field value
// and a boolean to check if the value has been set.
func (o *EmbeddingInputOneOf) GetStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.String, true
}

// SetString sets field value
func (o *EmbeddingInputOneOf) SetString(v string) {
	o.String = v
}

func (o EmbeddingInputOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddingInputOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["String"] = o.String

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EmbeddingInputOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"String",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmbeddingInputOneOf := _EmbeddingInputOneOf{}

	err = json.Unmarshal(data, &varEmbeddingInputOneOf)

	if err != nil {
		return err
	}

	*o = EmbeddingInputOneOf(varEmbeddingInputOneOf)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "String")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEmbeddingInputOneOf struct {
	value *EmbeddingInputOneOf
	isSet bool
}

func (v NullableEmbeddingInputOneOf) Get() *EmbeddingInputOneOf {
	return v.value
}

func (v *NullableEmbeddingInputOneOf) Set(val *EmbeddingInputOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddingInputOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddingInputOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddingInputOneOf(val *EmbeddingInputOneOf) *NullableEmbeddingInputOneOf {
	return &NullableEmbeddingInputOneOf{value: val, isSet: true}
}

func (v NullableEmbeddingInputOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddingInputOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
