/*
xAI's REST API

REST API for xAI compatible with other providers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xai

import (
	"encoding/json"
	"fmt"
)

// checks if the GeneratedImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneratedImage{}

// GeneratedImage Generated images
type GeneratedImage struct {
	// A base64-encoded string representation of the generated image in `jpeg` encoding, if `b64_json` is specified as `response_format` in the request.
	B64Json NullableString `json:"b64_json,omitempty"`
	// The revised prompt generated by a chat model from the original prompt. This prompt is used in the final image generation.
	RevisedPrompt string `json:"revised_prompt"`
	// A url to the generated image, if `response_format` is not specified or with `url` in the request.
	Url                  NullableString `json:"url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GeneratedImage GeneratedImage

// NewGeneratedImage instantiates a new GeneratedImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneratedImage(revisedPrompt string) *GeneratedImage {
	this := GeneratedImage{}
	this.RevisedPrompt = revisedPrompt
	return &this
}

// NewGeneratedImageWithDefaults instantiates a new GeneratedImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneratedImageWithDefaults() *GeneratedImage {
	this := GeneratedImage{}
	return &this
}

// GetB64Json returns the B64Json field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeneratedImage) GetB64Json() string {
	if o == nil || IsNil(o.B64Json.Get()) {
		var ret string
		return ret
	}
	return *o.B64Json.Get()
}

// GetB64JsonOk returns a tuple with the B64Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeneratedImage) GetB64JsonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.B64Json.Get(), o.B64Json.IsSet()
}

// HasB64Json returns a boolean if a field has been set.
func (o *GeneratedImage) HasB64Json() bool {
	if o != nil && o.B64Json.IsSet() {
		return true
	}

	return false
}

// SetB64Json gets a reference to the given NullableString and assigns it to the B64Json field.
func (o *GeneratedImage) SetB64Json(v string) {
	o.B64Json.Set(&v)
}

// SetB64JsonNil sets the value for B64Json to be an explicit nil
func (o *GeneratedImage) SetB64JsonNil() {
	o.B64Json.Set(nil)
}

// UnsetB64Json ensures that no value is present for B64Json, not even an explicit nil
func (o *GeneratedImage) UnsetB64Json() {
	o.B64Json.Unset()
}

// GetRevisedPrompt returns the RevisedPrompt field value
func (o *GeneratedImage) GetRevisedPrompt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisedPrompt
}

// GetRevisedPromptOk returns a tuple with the RevisedPrompt field value
// and a boolean to check if the value has been set.
func (o *GeneratedImage) GetRevisedPromptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisedPrompt, true
}

// SetRevisedPrompt sets field value
func (o *GeneratedImage) SetRevisedPrompt(v string) {
	o.RevisedPrompt = v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeneratedImage) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeneratedImage) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *GeneratedImage) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *GeneratedImage) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *GeneratedImage) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *GeneratedImage) UnsetUrl() {
	o.Url.Unset()
}

func (o GeneratedImage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneratedImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.B64Json.IsSet() {
		toSerialize["b64_json"] = o.B64Json.Get()
	}
	toSerialize["revised_prompt"] = o.RevisedPrompt
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GeneratedImage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revised_prompt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGeneratedImage := _GeneratedImage{}

	err = json.Unmarshal(data, &varGeneratedImage)

	if err != nil {
		return err
	}

	*o = GeneratedImage(varGeneratedImage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "b64_json")
		delete(additionalProperties, "revised_prompt")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGeneratedImage struct {
	value *GeneratedImage
	isSet bool
}

func (v NullableGeneratedImage) Get() *GeneratedImage {
	return v.value
}

func (v *NullableGeneratedImage) Set(val *GeneratedImage) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneratedImage) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneratedImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneratedImage(val *GeneratedImage) *NullableGeneratedImage {
	return &NullableGeneratedImage{value: val, isSet: true}
}

func (v NullableGeneratedImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneratedImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
