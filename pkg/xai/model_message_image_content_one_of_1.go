/*
xAI's REST API

REST API for xAI compatible with other providers.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xai

import (
	"encoding/json"
	"fmt"
)

// checks if the MessageImageContentOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageImageContentOneOf1{}

// MessageImageContentOneOf1 struct for MessageImageContentOneOf1
type MessageImageContentOneOf1 struct {
	Type string `json:"type"`
	// URL of the image.
	Url                  string `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _MessageImageContentOneOf1 MessageImageContentOneOf1

// NewMessageImageContentOneOf1 instantiates a new MessageImageContentOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageImageContentOneOf1(type_ string, url string) *MessageImageContentOneOf1 {
	this := MessageImageContentOneOf1{}
	this.Type = type_
	this.Url = url
	return &this
}

// NewMessageImageContentOneOf1WithDefaults instantiates a new MessageImageContentOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageImageContentOneOf1WithDefaults() *MessageImageContentOneOf1 {
	this := MessageImageContentOneOf1{}
	return &this
}

// GetType returns the Type field value
func (o *MessageImageContentOneOf1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MessageImageContentOneOf1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MessageImageContentOneOf1) SetType(v string) {
	o.Type = v
}

// GetUrl returns the Url field value
func (o *MessageImageContentOneOf1) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MessageImageContentOneOf1) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MessageImageContentOneOf1) SetUrl(v string) {
	o.Url = v
}

func (o MessageImageContentOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageImageContentOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["url"] = o.Url

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MessageImageContentOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageImageContentOneOf1 := _MessageImageContentOneOf1{}

	err = json.Unmarshal(data, &varMessageImageContentOneOf1)

	if err != nil {
		return err
	}

	*o = MessageImageContentOneOf1(varMessageImageContentOneOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMessageImageContentOneOf1 struct {
	value *MessageImageContentOneOf1
	isSet bool
}

func (v NullableMessageImageContentOneOf1) Get() *MessageImageContentOneOf1 {
	return v.value
}

func (v *NullableMessageImageContentOneOf1) Set(val *MessageImageContentOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageImageContentOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageImageContentOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageImageContentOneOf1(val *MessageImageContentOneOf1) *NullableMessageImageContentOneOf1 {
	return &NullableMessageImageContentOneOf1{value: val, isSet: true}
}

func (v NullableMessageImageContentOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageImageContentOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
